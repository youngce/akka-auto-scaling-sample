akka {
  actor {
    provider = "cluster"

    default-dispatcher {
      # Throughput for default Dispatcher, set to 1 for as fair as possible
      throughput = 10
    }
  }
//  discovery {
//    method = akka-dns
////    kubernetes-api {
////      pod-namespace = "default"
////
////      # %s will be replaced with the configured effective name, which defaults to
////      # the actor system name
////      pod-label-selector = "app=%s"
////
////      # This name must match the ports name in the deployment resource YAML.
////      pod-port-name = "management"
////    }
//  }

  cluster {
    # Initial contact points of the cluster.
    # The nodes to join automatically at startup.
    # Comma separated full URIs defined by a string on the form of
    # "akka.tcp://system@hostname:port"
    # Leave as empty if the node is supposed to be joined manually.
//    seed-nodes = [
//      "akka.tcp://sys@"${clustering.seed-ip}":"${clustering.seed-port}
//    ]
  }
  remote{
    log-remote-lifecycle-events = on
//    netty.tcp {
//      hostname = ${clustering.ip}
//      port = ${clustering.port}
////      bind-hostname = ${clustering.internal-ip} # internal (bind) hostname
////      bind-port = ${clustering.internal-port}
//    }
  }
  http{
    server{
      default-http-port = 8080
    }
  }
}
#discovery-config
akka.discovery {
  kubernetes-api {
    pod-label-selector = "app=%s" # same as the default
  }
}
#discovery-config

#management-config
akka.management {
  cluster.bootstrap {
    contact-point-discovery {
      # For the kubernetes API this value is substributed into the %s in pod-label-selector
      service-name = "akka-bootstrap-demo"

      # pick the discovery method you'd like to use:
      discovery-method = kubernetes-api

    }
  }
}
akka.cluster.shutdown-after-unsuccessful-join-seed-nodes = 30s
akka.coordinated-shutdown.exit-jvm = on
clustering {
  ip = "0.0.0.0"
  ip = ${?CLUSTER_IP}
  port = 2552
  port = ${?CLUSTER_PORT}

//  internal-ip=${?INTERNAL_IP}
//  internal-port=${?INTERNAL_PORT}

  seed-ip = "127.0.0.1"
  seed-ip = ${?CLUSTER_IP}
//  seed-ip=${?INTERNAL_IP}
  seed-ip = ${?SEED_PORT_1600_TCP_ADDR}
  seed-port = 9090
//  seed-port = ${?INTERNAL_PORT}
  seed-port = ${?SEED_PORT_1600_TCP_PORT}
//  cluster.name = clustering-cluster
}
